# The preconfigured backup scheme is as follows:
#
#   Full Backups are done on first Saturday at 1:00               (#04)
#   Full Backups are written into the "Full" Pool                 (#05)
#   Full Backups are kept for 365 Days                            (#06)
#
#   Differential Backups are done on 2nd to 5th Saturday at 1:00  (#07)
#   Differential Backups are written into the "Differential" Pool (#08)
#   Differential Backups are kept for 90 Days                     (#09)
#
#   Incremental Backups are done monday to friday at 1:00         (#10)
#   Incremental Backups are written into the "Incremental" Pool   (#11)
#   Incremental Backups are kept for 30 Days                      (#12)

Director {                            # define myself
  Name = bareos-dir
  DirPort = 9101
  QueryFile = "/usr/lib/bareos/scripts/query.sql"
  Maximum Concurrent Jobs = 10
  Password = "passwordhere"         # Console password
  Messages = Daemon
  Auditing = yes
}

JobDefs {
  Name = "DefaultJob"
  Type = Backup
  Level = Incremental
  Client = bareos-fd
  FileSet = "SelfTest"                     # selftest fileset                            (#13)
  Schedule = "WeeklyCycle"
  Storage = File
  Messages = Standard
  Pool = Incremental
  Priority = 10
  Write Bootstrap = "/var/lib/bareos/%c.bsr"
  Full Backup Pool = Full                  # write Full Backups into "Full" Pool         (#05)
  Differential Backup Pool = Differential  # write Diff Backups into "Differential" Pool (#08)
  Incremental Backup Pool = Incremental    # write Incr Backups into "Incremental" Pool  (#11)
}

#
# Define the main nightly save backup job
#   By default, this job will back up to disk in /var/lib/bareos/storage
Job {
  Name = "SelfBackupTest"
  JobDefs = "DefaultJob"
}

Job {
  Name = "BackupNginx-Office"
  JobDefs = "DefaultJob"
  Level = Full
  Client = proxy_office-fd
  FileSet = "Nginx"
}

Job {
  Name = "BackupPostgres-jira_office"
  JobDefs = "DefaultJob"
  Level = Full
  Client = jira_office-fd
  FileSet = "Postgresql"
  Schedule = "WeeklyCycleBackupDB"
  RunScript {
    FailJobOnError = Yes 
    RunsOnClient = Yes 
    RunsWhen = Before 
    Command = "sh -c 'PGPASSWORD=1130688M@gic pg_dumpall -U bareos -h 127.0.0.1 > /var/lib/bareos/postgresql_dump.sql'" 
  }
  RunScript { 
    RunsOnSuccess = Yes 
    RunsOnClient = Yes 
    RunsWhen = After 
    Command = "rm /var/lib/bareos/postgresql_dump.sql" 
  } 
}

Job {
  Name = "Backup_Jira-jira_office"
  JobDefs = "DefaultJob"
  Level = Full
  Client = jira_office-fd
  FileSet = "Jira"
}

Job {
  Name = "BackupPostgres-bitbucket_office"
  JobDefs = "DefaultJob"
  Level = Full
  Client = bitbucket_office-fd
  FileSet = "Postgresql"
  Schedule = "WeeklyCycleBackupDB"
  RunScript {
    FailJobOnError = Yes 
    RunsOnClient = Yes 
    RunsWhen = Before 
    Command = "sh -c 'PGPASSWORD=1130688M@gic pg_dumpall -U bareos -h 127.0.0.1 > /var/lib/bareos/postgresql_dump.sql'" 
  }
  RunScript { 
    RunsOnSuccess = Yes 
    RunsOnClient = Yes 
    RunsWhen = After 
    Command = "rm /var/lib/bareos/postgresql_dump.sql" 
  } 
}

Job {
  Name = "BackupPostgres-wiki_office"
  JobDefs = "DefaultJob"
  Level = Full
  Client = wiki_office-fd
  FileSet = "Postgresql"
  Schedule = "WeeklyCycleBackupDB"
  RunScript {
    FailJobOnError = Yes 
    RunsOnClient = Yes 
    RunsWhen = Before 
    Command = "sh -c 'PGPASSWORD=1130688M@gic pg_dumpall -U bareos -h 127.0.0.1 > /var/lib/bareos/postgresql_dump.sql'" 
  }
  RunScript { 
    RunsOnSuccess = Yes 
    RunsOnClient = Yes 
    RunsWhen = After 
    Command = "rm /var/lib/bareos/postgresql_dump.sql" 
  } 
}

Job {
  Name = "BackupPostgres-bamboo_office"
  JobDefs = "DefaultJob"
  Level = Full
  Client = bamboo_office-fd
  FileSet = "Postgresql"
  Schedule = "WeeklyCycleBackupDB"
  RunScript {
    FailJobOnError = Yes 
    RunsOnClient = Yes 
    RunsWhen = Before 
    Command = "sh -c 'PGPASSWORD=1130688M@gic pg_dumpall -U bareos -h 127.0.0.1 > /var/lib/bareos/postgresql_dump.sql'" 
  }
  RunScript { 
    RunsOnSuccess = Yes 
    RunsOnClient = Yes 
    RunsWhen = After 
    Command = "rm /var/lib/bareos/postgresql_dump.sql" 
  } 
}

#
# Backup the catalog database (after the nightly save)
#
Job {
  Name = "BackupSelfCatalog"
  JobDefs = "DefaultJob"
  Level = Full
  FileSet="Catalog"
  Schedule = "WeeklyCycleAfterBackup"

  # This creates an ASCII copy of the catalog
  # Arguments to make_catalog_backup.pl are:
  #  make_catalog_backup.pl <catalog-name>
  RunBeforeJob = "/usr/lib/bareos/scripts/make_catalog_backup.pl MyCatalog"

  # This deletes the copy of the catalog
  RunAfterJob  = "/usr/lib/bareos/scripts/delete_catalog_backup"

  # This sends the bootstrap via mail for disaster recovery.
  # Should be sent to another system, please change recipient accordingly
  Write Bootstrap = "|/usr/bin/bsmtp -h localhost -f \"\(Bareos\) \" -s \"Bootstrap for Job %j\" root@localhost" # (#01)
  Priority = 11                   # run after main backup
}

#
# Standard Restore template, to be changed by Console program
#  Only one such job is needed for all Jobs/Clients/Storage ...
#
Job {
  Name = "RestoreFiles"
  Type = Restore
  Client=bareos-fd
  FileSet = "Linux All"
  Storage = File
  Pool = Incremental
  Messages = Standard
  Where = /tmp/bareos-restores
}


FileSet {
  Name = "Windows All Drives"
  Enable VSS = yes
  Include {
    Options {
      Signature = MD5
      Drive Type = fixed
      IgnoreCase = yes
      WildFile = "[A-Z]:/pagefile.sys"
      WildDir = "[A-Z]:/RECYCLER"
      WildDir = "[A-Z]:/$RECYCLE.BIN"
      WildDir = "[A-Z]:/System Volume Information"
      Exclude = yes
    }
    File = /
  }
}


FileSet {
  Name = "Linux All"
  Include {
    Options {
      Signature = MD5 # calculate md5 checksum per file
      One FS = No     # change into other filessytems
      FS Type = ext2  # filesystems of given types will be backed up
      FS Type = ext3  # others will be ignored
      FS Type = ext4
      FS Type = xfs
      FS Type = zfs
      FS Type = reiserfs
      FS Type = jfs
      FS Type = btrfs
    }
    File = /
  }
  # Things that usually have to be excluded
  # You have to exclude /var/lib/bareos/storage
  # on your bareos server
  Exclude {
    File = /var/lib/bareos
    File = /var/lib/bareos/storage
    File = /proc
    File = /tmp
    File = /.journal
    File = /.fsck
  }

}

# fileset just to backup some files for selftest
FileSet {
  Name = "SelfTest"
  Include {
    Options {
      Signature = MD5 # calculate md5 checksum per file
    }
    File = "/usr/sbin"
  }
}

FileSet {
  Name = "Nginx"
  Include {
    Options {
      Signature = MD5 # calculate md5 checksum per file
    }
    File = "/etc/nginx"
  }
}

FileSet {
  Name = "Jira"
  Include {
    Options {
      Signature = MD5 # calculate md5 checksum per file
      compression = gzip 
    }
    File = "/opt/atlassian/jira"
    File = "/var/atlassian/application-data/jira/"
  }
  Exclude {
    File = "/opt/atlassian/jira/logs/*"
    File = "/var/atlassian/application-data/jira/analytics-logs/*"
    File = "/var/atlassian/application-data/jira/caches/*"
    File = "/var/atlassian/application-data/jira/log/*"
    File = "/var/atlassian/application-data/jira/tmp/*"
  }

}

FileSet { 
  Name = "Postgresql" 
  Include { 
    Options { 
      signature = MD5 
      compression = gzip 
    } 
    File = "/var/lib/bareos/postgresql_dump.sql" 
  } 
}

Schedule {
  Name = "WeeklyCycle"
  Run = Full 1st sun at 1:00                   # (#04)
  Run = Differential 2nd-5th sun at 1:00       # (#07)
  Run = Incremental mon-sat at 1:00            # (#10)
}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Full mon-sun at 1:10
}

Schedule {
  Name = "WeeklyCycleBackupDB"
  Run = Full mon-sun at 1:20
}

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = MD5
    }
    File = "/var/lib/bareos/bareos.sql" # database dump
    File = "/etc/bareos"                   # configuration
  }
}


###### Clients (File Services) to backup ###########
Client {
  Name = bareos-fd
  Address = localhost
  Password = "WQn9rVEwxaeMLpycofAMm5ZiaqH7bCAL5SuESxK4Hupn"          # password for FileDaemon
}

Client {
  Name = proxy_office-fd
  Address = 192.168.110.53
  Password = "CdfIadndfInasdlfcvoLSD!Knv834KDNkijlas9v"          # password for FileDaemon
}

Client {
  Name = bitbucket_office-fd
  Address = 192.168.110.47
  Password = "CdfIadndfInasdlfcvoLSD!Knv834KDNkijlas9v"          # password for FileDaemon
}

Client {
  Name = bamboo_office-fd
  Address = 192.168.110.45
  Password = "CdfIadndfIasdlfcvoLSD!Knv834KDNkijlas9v"          # password for FileDaemon
}

Client {
  Name = jira_office-fd
  Address = 192.168.110.43
  Password = "CdfIadndfInasdlfcvoLSD!Knv834KDNkijlas9v"          # password for FileDaemon
}

Client {
  Name = wiki_office-fd
  Address = 192.168.110.42
  Password = "CdfIadndfInasdlfcvoLSD!Knv834KDNkijlas9v"          # password for FileDaemon
}

####################################################

#
# Definition of file storage device
#
Storage {
  Name = File
  Address = 192.168.110.35                # N.B. Use a fully qualified name here
  Password = "Fd7w+6RNd+/bAzS2QZWWS22jmRbFj/8apzR/gIBIsrRC"
  Device = FileStorage
  Media Type = File
}

#
# Generic catalog service
#
Catalog {
  Name = MyCatalog
  dbdriver = "postgresql"
  dbname = "bareos"
  dbuser = "bareos"
  dbpassword = "1130688M@gic"
}

#
# Reasonable message delivery -- send most everything to email address and to the console
#
Messages {
  Name = Standard
  mailcommand = "/etc/bareos/bareos_zabbix_integration/notify.py '%n' '%t' '%l' '%e'"
  mail = <root@localhost> = all, !skipped
  console = all, !skipped, !saved, !audit
  append = "/var/log/bareos/bareos.log" = all, !skipped, !audit
  catalog = all, !audit
}

#
# Message delivery for daemon messages (no job).
#
Messages {
  Name = Daemon
  mailcommand = "/etc/bareos/bareos_zabbix_integration/notify.py '%n' '%t' '%l' '%e'"
  mail = <root@localhost> = all, !skipped
  console = all, !skipped, !saved, !audit
  append = "/var/log/bareos/bareos.log" = all, !skipped, !audit
  append = "/var/log/bareos/bareos-audit.log" = audit
}

#
# Full Pool definition
#
Pool {
  Name = Full
  Pool Type = Backup
  Recycle = yes                       # Bareos can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # How long should the Full Backups be kept? (#06)
  Maximum Volume Bytes = 50G          # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
  Label Format = "Full-"              # Volumes will be labeled "Full-<volume-id>"
}

#
# Differential Pool definition
#
Pool {
  Name = Differential
  Pool Type = Backup
  Recycle = yes                       # Bareos can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 90 days          # How long should the Differential Backups be kept? (#09)
  Maximum Volume Bytes = 10G          # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
  Label Format = "Differential-"      # Volumes will be labeled "Differential-<volume-id>"
}

#
# Incremental Pool definition
#
Pool {
  Name = Incremental
  Pool Type = Backup
  Recycle = yes                       # Bareos can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 30 days          # How long should the Incremental Backups be kept?  (#12)
  Maximum Volume Bytes = 1G           # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
  Label Format = "Incremental-"       # Volumes will be labeled "Incremental-<volume-id>"
}

#
# Scratch pool definition
#
Pool {
  Name = Scratch
  Pool Type = Backup
}

#
# Restricted console used by tray-monitor to get the status of the director
#
Console {
  Name = bareos-mon
  Password = "hdq2w40oy1QfGwpaFBLhSxXQh1Em0Q+9WwZIhGc2n2LA"
  CommandACL = status, .status
  JobACL = *all*
}
@/etc/bareos/bareos-dir.d/webui-consoles.conf
@/etc/bareos/bareos-dir.d/webui-profiles.conf
